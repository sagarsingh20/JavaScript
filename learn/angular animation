Without ngIf====

Html->
 <button [@openClose]="isOpen ? 'open' : 'closed'" class="open-close-container" (click)="toggle()">
    <p>The box is now {{ isOpen ? 'Open' : 'Closed' }}!</p>
</button> 
css->
 :host {
    display: block;
  }
  
.open-close-container {
 border: 1px solid #dddddd;
  margin-top: 1em;
 padding: 20px 20px 0px 20px;
  color: #000000;
 font-weight: bold;
  font-size: 20px;
  }

.ts file=>
toggle() {
    this.isOpen = !this.isOpen;
  }

animations: [
    trigger('openClose', [
      state('open', style({
        height: '200px',
        width:'100px',
        opacity: 1,
        backgroundColor: 'yellow'
      })),
      state('closed', style({
        width:'200px',
        height: '100px',
        opacity: 0.5,
        backgroundColor: 'green'
      })),
      transition('open => closed', [
        animate('1s')
      ]),
      transition('closed => open', [
        animate('0.5s')
      ]),
    ]),
  ],



//With ngIf=====>>>>>////

HTML=>>
<ul  @myShowHide *ngIf="data.key==true" class="insert-remove-container">
....
.ts=>>

 animations:[
    trigger('myShowHide',[
      transition(':enter', [
        style({ opacity: 0  ,height: 'auto'}),
        animate('2s', style({
         opacity: 1 ,height: 'auto',})),
      ]),
      transition(':leave', [
        animate('1s', style({ opacity: 0 }))
      ])
    ])
  ],
